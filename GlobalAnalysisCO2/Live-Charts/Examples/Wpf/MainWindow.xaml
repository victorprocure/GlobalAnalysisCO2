<Window x:Class="Wpf.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Wpf"
        mc:Ignorable="d"
        Title="MainWindow" Height="600" Width="750"
        WindowStartupLocation="CenterScreen"
        d:DataContext="{d:DesignInstance local:MainWindow}">
    <Window.Resources>
        <Style TargetType="TextBlock">
            <Setter Property="FontFamily" Value="Calibri"></Setter>
            <Setter Property="FontSize" Value="16"></Setter>
        </Style>
        <Style TargetType="Button">
            <Setter Property="Padding" Value="10 5"></Setter>
            <Setter Property="Foreground" Value="White"></Setter>
            <Setter Property="Background" Value="#006DEF"></Setter>
            <Setter Property="BorderThickness" Value="0"></Setter>
            <Setter Property="FontWeight" Value="Bold"></Setter>
            <Setter Property="FontSize" Value="14"></Setter>
        </Style>
    </Window.Resources>
    <ScrollViewer>
        <StackPanel Margin="15 0">
            <Image Source="lvlogo.png" Height="50" Margin="15" Visibility="Collapsed"></Image>
            <TextBlock TextWrapping="Wrap" Visibility="Collapsed">
            Hey, welcome to LiveCharts examples, LiveCharts is designed to be powerful, customizable, maintainable and easy to use for the user.
            </TextBlock>
            <TextBlock TextWrapping="Wrap" Visibility="Collapsed">
            All the charts are responsive, what does this means? when you resize a chart or your data changes the UI will update automatically, this will save you
            hours, and you will only need to focus in the logic of your business, let LiveCharts handle the plotting.
            </TextBlock>
            <TextBlock TextWrapping="Wrap" Visibility="Collapsed">
                There is a folder in this project with the code behind of each view you see in the next carousel, to reach the code behind, for example in the cartesian chart carousel go to the CartesialChart folder in this project, and then open the desired user view.
            </TextBlock>
            <!--<TextBlock TextWrapping="Wrap" Margin="15" Padding="10">
                <TextBlock.Background>
                    <SolidColorBrush Color="YellowGreen" Opacity=".5"></SolidColorBrush>
                </TextBlock.Background>
                <Bold>Note:</Bold> This examples are only for 0.7.0 version and it is only alpha, if you are new to LiveCharts I reccomend you to wait for 0.7 version, it will be ready in no more than one week,
            you could also find examples for the latest nuget package
            <Hyperlink NavigateUri="https://github.com/beto-rodriguez/Live-Charts/tree/83d888974fca25161e0b2e9389f0611d91043449/WPFExamples" RequestNavigate="Hyperlink_OnRequestNavigate">
                here
            </Hyperlink>
            </TextBlock>-->
            <Separator Margin="10" ></Separator>
            <Grid Height="500">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Source="Left.png" Height="30" MouseDown="PreviousCartesianOnClick"></Image>
                <ContentControl Grid.Column="1" Content="{Binding CartesianView}"/>
                <Image Grid.Column="2" Source="Right.png" Height="30" MouseDown="NextCartesianOnClick"></Image>
            </Grid>
            <Separator Margin="10" ></Separator>
            <Grid Height="500">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Source="Left.png" Height="30" MouseDown="PreviousPieOnClick"></Image>
                <ContentControl Grid.Column="1" Content="{Binding PieView}"/>
                <Image Grid.Column="2" Source="Right.png" Height="30" MouseDown="NextPieOnClick"></Image>
            </Grid>
            <Separator Margin="10" ></Separator>
            <Grid Height="500">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="Auto"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Image Grid.Column="0" Source="Left.png" Height="30" MouseDown="PreviousGaugeOnClick"></Image>
                <ContentControl Grid.Column="1" Content="{Binding GaugeView}"/>
                <Image Grid.Column="2" Source="Right.png" Height="30" MouseDown="NextGaugeOnClick"></Image>
            </Grid>
        </StackPanel>
    </ScrollViewer>
</Window>
